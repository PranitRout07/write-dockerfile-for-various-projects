# FROM python
# WORKDIR /app
# COPY . .  
# RUN pip install django
# EXPOSE 8000
# CMD ["python","manage.py","runserver","0.0.0.0:8000"]

#MULTISTAGE



FROM python:3.10-slim AS builder
WORKDIR /app
COPY . .  
RUN pip install django

FROM python:3.10-slim
WORKDIR /app
COPY --from=builder /usr/local/lib/python3.10/site-packages /usr/local/lib/python3.10/site-packages
COPY --from=builder /app /app
EXPOSE 8000
CMD ["python", "manage.py", "runserver", "0.0.0.0:8000"]



# Initial image size without using multistage dockerfile:- 1.07GB
# After multi stage dockerfile:- 170mb (almost 85% decrease in image size) 
# Also if there are executables present like in golang application , they can be run using alpine:latest and scratch image to reduce the docker image size
# Apart from these you can add a .dockerignore file where you can mention all the unwanted files that need not to be copied to workspace
